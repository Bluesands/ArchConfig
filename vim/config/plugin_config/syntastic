" syntastic
" 设置错误符号
let g:syntastic_error_symbol = '✗'
" 设置警告符号
let g:syntastic_warning_symbol = '⚠'
let g:syntastic_error_symbol = '✗'
let g:syntastic_style_error_symbol = '⚠'
" 是否在打开文件时检查
let g:syntastic_check_on_open = 1
" 是否在保存文件后检查
let g:syntastic_check_on_wq = 1
let g:syntastic_enable_highlighting = 1
" 修改高亮的背景色, 适应主题
highlight SyntasticErrorSign guifg=white guibg=black

let g:syntastic_python_python_exec = '/usr/local/python3/bin/python3.5'
let g:syntastic_python_pyflakes_exe = '/usr/local/python3/bin/pyflakes'
let g:syntastic_python_checkers=['pyflakes'] " 使用pyflakes,速度比pylint快
let g:syntastic_javascript_checkers = ['jsl', 'jshint']
let g:syntastic_html_checkers=['tidy', 'jshint']
let g:syntastic_always_populate_loc_list = 0
let g:syntastic_auto_loc_list = 0
let g:syntastic_loc_list_height = 5
" 修改高亮的背景色, 适应主题
highlight SyntasticErrorSign guifg=white guibg=black

" to see error location list
let g:syntastic_always_populate_loc_list = 0
let g:syntastic_auto_loc_list = 0
let g:syntastic_loc_list_height = 5
function! ToggleErrors()
    let old_last_winnr = winnr('$')
    lclose
    if old_last_winnr == winnr('$')
        " Nothing was closed, open syntastic error location panel
        Errors
    endif
endfunction
nnoremap <Leader>s :call ToggleErrors()<cr>
nnoremap <Leader>sn :lnext<cr>
nnoremap <Leader>sp :lprevious<cr>

